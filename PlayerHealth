using UnityEngine;
using UnityEngine.UI;

public class PlayerHealth : MonoBehaviour
{
    public Slider healthSlider; // 체력 슬라이더
    public Transform player; // 플레이어 위치
    public Vector3 offset; // 체력바가 플레이어 아래에 오도록 하는 오프셋

    public float maxHealth = 100f; // 최대 체력
    private float currentHealth; // 현재 체력

    private UIManager uiManager;  // UIManager 참조
    public GameObject deathEffectPrefab; // 플레이어 죽을 때 나오는 이펙트 프리팹

    void Start()
    {
        currentHealth = maxHealth; // 초기 체력 설정
        healthSlider.maxValue = maxHealth; // 슬라이더의 최대값을 최대 체력으로 설정
        healthSlider.value = currentHealth; // 슬라이더의 초기값 설정
        uiManager = FindObjectOfType<UIManager>(); // UIManager 찾기

        // 최대 체력이 1 이상인지 확인
        maxHealth = Mathf.Max(maxHealth, 1f);
    }

    void Update()
    {
        // 체력바 위치를 플레이어 위치 아래로 고정
        healthSlider.transform.position = Camera.main.WorldToScreenPoint(player.position + offset);

        // 예시로 체력 감소 처리 (이 부분은 실제 게임 로직에 맞게 수정)
        if (Input.GetKeyDown(KeyCode.K))  // 'K' 키를 누르면 데미지를 받음
        {
            TakeDamage(20f);
        }
    }

    // 체력 감소 함수 (총알 등으로 피해를 받을 때 호출)
    public void TakeDamage(float damage)
    {
        currentHealth -= damage;
        currentHealth = Mathf.Clamp(currentHealth, 0, maxHealth); // 체력이 0보다 작지 않도록
        healthSlider.value = currentHealth; // 슬라이더 값 업데이트

        if (currentHealth <= 0)
        {
            Die(); // 체력이 0이 되면 Die 호출
        }
    }

    // 플레이어가 죽었을 때 처리
    void Die()
    {
        // 플레이어 사망 UI 표시
        if (uiManager != null)
        {
            uiManager.ShowPlayerDeath();
        }

        // 플레이어 죽을 때 이펙트 생성
        if (deathEffectPrefab != null)
        {
            // 플레이어 위치에서 이펙트 생성
            Instantiate(deathEffectPrefab, transform.position, Quaternion.identity);
        }
        else
        {
            Debug.LogWarning("Death effect prefab is not assigned!");
        }

        // 플레이어 죽음 시 처리할 다른 로직들 (예: 플레이어 오브젝트 파괴)
        Destroy(gameObject); // 플레이어 오브젝트 파괴
    }
}

using UnityEngine;
using UnityEngine.UI;
using System.Collections;

public class EnemyHealth : MonoBehaviour
{
    public Slider healthSlider; // 적 체력 슬라이더
    public Transform enemy; // 적의 위치
    public Vector3 offset; // 적의 체력바 위치

    public float maxHealth = 100f; // 최대 체력
    private float currentHealth; // 현재 체력

    public GameObject deathEffectPrefab;  // 적이 죽을 때 나타날 이펙트 프리팹
    private UIManager uiManager;  // UIManager를 참조

    void Start()
    {
        currentHealth = maxHealth; // 초기 체력 설정
        maxHealth = Mathf.Max(maxHealth, 1f); // 최대 체력이 1보다 작은 경우 1로 설정
        healthSlider.maxValue = maxHealth; // 슬라이더의 최대값을 최대 체력으로 설정
        healthSlider.value = currentHealth; // 슬라이더의 초기값 설정
        uiManager = Object.FindAnyObjectByType<UIManager>(); // UIManager 찾기
    }

    void Update()
    {
        // 체력바 위치를 적 위치 아래로 고정
        healthSlider.transform.position = Camera.main.WorldToScreenPoint(enemy.position + offset);
    }

    // 체력 감소 함수 (총알 등으로 피해를 받을 때 호출)
    public void TakeDamage(float damage)
    {
        currentHealth -= damage;
        currentHealth = Mathf.Clamp(currentHealth, 0, maxHealth); // 체력이 0보다 작지 않도록
        healthSlider.value = currentHealth; // 슬라이더 값 업데이트

        // 디버깅 메시지 출력
        Debug.Log("Current Health: " + currentHealth); // 체력 값 출력

        if (currentHealth <= 0)
        {
            Die();
        }
    }

    // 적이 죽을 때 처리
    void Die()
    {
        // 죽을 때 이펙트 생성
        if (deathEffectPrefab != null)
        {
            Instantiate(deathEffectPrefab, transform.position, Quaternion.identity);
        }

        // 스테이지 클리어 UI를 일정 시간 후에 표시 (1.5초 대기 후)
        StartCoroutine(ShowStageClearUIWithDelay());

        // 적 오브젝트 파괴
        Destroy(gameObject);
    }

    // 스테이지 클리어 UI를 일정 시간 후에 표시하는 코루틴
    IEnumerator ShowStageClearUIWithDelay()
    {
        // 1.5초 대기
        yield return new WaitForSeconds(1.5f);

        if (uiManager != null)
        {
            // 스테이지 클리어 UI 표시
            uiManager.ShowStageClear();
        }
        else
        {
            Debug.LogWarning("UIManager not found! Cannot show Stage Clear UI.");
        }
    }
}

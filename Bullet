using UnityEngine;
using System.Collections;

public class Bullet : MonoBehaviour
{
    public int damage = 10; // 총알 피해
    public float speed = 10f; // 총알 속도
    public Vector2 direction; // 총알 발사 방향
    private Rigidbody2D rb;

    private float ignoreCollisionTime = 0.2f; // 충돌을 무시할 시간 (0.2초)
    private bool canCollide = false; // 충돌 가능 여부

    void Start()
    {
        rb = GetComponent<Rigidbody2D>(); // Rigidbody2D 컴포넌트 가져오기

        // Rigidbody2D의 Gravity Scale을 0으로 설정 (중력 영향을 없애기 위해)
        rb.gravityScale = 0;

        // 총알이 발사될 방향과 속도를 설정합니다.
        if (rb != null)
        {
            rb.velocity = direction * speed; // velocity 사용해서 방향과 속도 설정
        }

        // 일정 시간 후 충돌을 가능하게 합니다.
        StartCoroutine(EnableCollisionAfterTime());
    }

    // 일정 시간 후 충돌 가능하도록 설정하는 코루틴
    IEnumerator EnableCollisionAfterTime()
    {
        // 0.2초 동안 기다립니다.
        yield return new WaitForSeconds(ignoreCollisionTime);
        canCollide = true; // 충돌 가능
    }

    // 총알이 다른 오브젝트와 충돌했을 때
    void OnCollisionEnter2D(Collision2D collision)
    {
        if (!canCollide) return; // 충돌을 무시하는 동안은 아무것도 하지 않음

        // 적과 충돌한 경우
        if (collision.gameObject.CompareTag("Enemy"))
        {
            EnemyHealth enemyHealth = collision.gameObject.GetComponent<EnemyHealth>();
            if (enemyHealth != null)
            {
                enemyHealth.TakeDamage(damage); // 적 체력 감소
            }

            // 총알이 적과 충돌했으므로 총알을 파괴
            Destroy(gameObject);
        }

        // 플레이어와 충돌한 경우
        if (collision.gameObject.CompareTag("Player"))
        {
            PlayerHealth playerHealth = collision.gameObject.GetComponent<PlayerHealth>();
            if (playerHealth != null)
            {
                playerHealth.TakeDamage(damage); // 플레이어 체력 감소
            }

            // 총알이 플레이어와 충돌했으므로 총알을 파괴
            Destroy(gameObject);
        }
    }
}
